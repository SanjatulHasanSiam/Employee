@model AjaxModal.ViewModels.EmployeeViewModel

<h1>Employee Management</h1>
<button class="btn btn-primary" onclick="openAddModal()">Add Employee</button>
<table id="employee_table" class="display">
    <thead>
        <tr>
            @*<th>ID</th>*@
            <th>Name</th>
            <th>Email</th>
            <th>Designation</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        <!-- Data rows will be added dynamically -->
    </tbody>
</table>

<!-- Add Modal -->
<div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addModalLabel">Add Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>

            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="employee_name_add">Employee Name</label>
                    <input type="text" class="form-control" id="employee_name_add" placeholder="Employee Name">
                </div>
                <div class="form-group">
                    <label for="employee_email_add">Employee Email</label>
                    <input type="email" class="form-control" id="employee_email_add" placeholder="Employee Email">
                </div>
                <!-- Change here -->

                <div class="form-group">
                    <label for="employee_designation_add">Employee Designation</label>
                    <select id="employee_designation_add" class="form-select">
                        @foreach (var designation in Model.Designations)
                        {
                            <option class="" value="@designation.Id">@designation.Title</option>
                        }
                    </select>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="add_employee_modal">Add Employee</button>
            </div>
        </div>
    </div>
</div>

<!-- Update Modal -->
<div class="modal fade" id="updateModal" tabindex="-1" role="dialog" aria-labelledby="updateModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Update Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>

            </div>

            <div class="modal-body">
                <input type="hidden" id="employee_id_update">
                <div class="form-group">
                    <label for="employee_name_update">Employee Name</label>
                    <input type="text" class="form-control" id="employee_name_update" placeholder="Employee Name">
                </div>
                <div class="form-group">
                    <label for="employee_email_update">Employee Email</label>
                    <input type="email" class="form-control" id="employee_email_update" placeholder="Employee Email">
                </div>
                <!-- Change here -->
                <div class="form-group">
                    <label for="employee_designation_update">Employee Designation</label>
                    <select id="employee_designation_update" class="form-select">
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="updateEmployeeButton">Update Employee</button>
            </div>
        </div>
    </div>
</div>


<!-- Confirm Delete Modal -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>

            </div>
            <div class="modal-body">
                Are you sure you want to delete this employee?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        var dataTable;
        var apiBase = "https://localhost:7180/api/v1"

        function fetchEmployees() {
            fetch(`${apiBase}/employees`)
                .then(response => response.json())
                .then(data => {
                   
                    dataTable.clear().rows.add(data).draw(false);
                })
                .catch(error => console.error('Error fetching data:', error));
        }

        function deleteEmployee(id) {
            // Show confirmation modal before deleting
            $('#confirmDeleteModal').modal('show');

            $('#confirmDeleteButton').off('click').on('click', function () {
                $('#confirmDeleteModal').modal('hide');
                fetch(`${apiBase}/employees/${id}`, {
                    method: 'DELETE'
                })
                    .then(response => {
                        if (response.ok) {
                            dataTable.row(`[data-id="${id}"]`).remove().draw(true);
                        } else {
                            console.error('Error deleting employee.');
                        }
                    })
                    .catch(error => console.error('Error deleting employee:', error));
            });
        }

        function updateEmployee(id, updatedEmployee) {
            fetch(`${apiBase}/employees/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedEmployee)
            })
                .then(response => {
                    if (response.ok) {
                        return response.json(); // Parse the response to get the updated employee
                    } else {
                        console.error('Error updating employee.');
                        throw new Error('Error updating employee.');
                    }
                })
                .then(updatedEmployee => {
                    $('#updateModal').modal('hide');

                    // Find the row with the updated employee's ID and update its data
                    //const updatedRow = dataTable.row(`[data-id="${id}"]`);
                    //updatedRow.data(updatedEmployee);
                    fetchEmployees()
                })
                .catch(error => console.error('Error updating employee:', error));
        }

        function openUpdateModal(id, name, email,designationId) {
            $('#employee_id_update').val(id);
            $('#employee_name_update').val(name);
            $('#employee_email_update').val(email);

            var designations = @Html.Raw(Json.Serialize(Model.Designations));
            debugger;
            var designationDropdown = $('#employee_designation_update');

            designationDropdown.empty(); // Clear existing options

            $.each(designations, function (index, designation) {
                designationDropdown.append($('<option>', {
                    value: designation.id,
                    text: designation.title,
                    selected: designation.id === designationId // Set selected attribute
                }));
            });
            $('#updateEmployeeButton').off('click').on('click', function () {
                const updatedId = $('#employee_id_update').val();
                const updatedName = $('#employee_name_update').val();
                const updatedEmail = $('#employee_email_update').val();
                const updatedDesignationId = $('#employee_designation_update').val();
                debugger;
                const updatedEmployee = { "name": updatedName, "email": updatedEmail, "designationId": updatedDesignationId };

                updateEmployee(updatedId, updatedEmployee);
            });

            $('#updateModal').modal('show');
        }

        function openAddModal() {
            // Clear input fields
            $('#employee_name_add').val('');
            $('#employee_email_add').val('');
            var firstDesignationId = @Model.Designations.FirstOrDefault()?.Id;
            $('#employee_designation_add').val(firstDesignationId);
           

            // Show the add modal
            $('#addModal').modal('show');
        }


        function addEmployee(employee) {
            fetch(`${apiBase}/employees`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(employee)
            })
                .then(response => {
                    if (response.ok) {
                        return response.json(); // Parse the response to get the added employee with its Id
                    } else {
                        console.error('Error adding employee.');
                        throw new Error('Error adding employee.');
                    }
                })
                .then(addedEmployee => {
                    $('#addModal').modal('hide');
                    // Assuming dataTable is a reference to the DataTable object
                    //dataTable.row.add(addedEmployee).draw(false);
                    fetchEmployees()
                })
                .catch(error => console.error('Error adding employee:', error));
        }

        $(document).ready(function () {
            dataTable = $('#employee_table').DataTable({
                "columns": [
                    //{ "data": "id" },
                    { "data": "name" },
                    { "data": "email" },
                    { "data": "designation.title" },
                    {
                        "data": "id",
                        "render": function (data, type, row) {
                            return `
                                    <button class="btn btn-danger btn-delete" onclick="deleteEmployee(${data})">Delete</button>
                                            <button class="btn btn-primary btn-update" onclick="openUpdateModal(${data},'${row.name}','${row.email}',${row.designation.id})">Update</button>
                                `;
                        },
                        "orderable": false
                    }
                ],
                "createdRow": function (row, data, dataIndex) {
                    $(row).attr('data-id', data.id);
                }
            });

            fetchEmployees();

            $('#add_employee_modal').on('click', function () {
                var employeeName = $('#employee_name_add').val();
                var employeeEmail = $('#employee_email_add').val();
                var employeeDesignationId = $('#employee_designation_add').val();
                
                var newEmployee = {
                    "name": employeeName, "email": employeeEmail, "designationId": employeeDesignationId
                };
                addEmployee(newEmployee);
            });
        });
    </script>
}
